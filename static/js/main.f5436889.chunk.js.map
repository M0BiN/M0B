{"version":3,"sources":["assets/vahshi.png","functions/lexical.js","component/sourceAppbar/appbar.component.jsx","component/token-table/token-table.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","regex","getTokens","input","tokens","match","exec","value","row","index","group","reduce","ac","v","i","Infinity","Appbar","label","classes","useStyles","Grid","item","xs","Paper","className","paper","Typography","style","fontFamily","color","variant","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","padding","textAlign","background","borderRadius","table","tableCell","paddingRight","paddingLeft","SimpleTable","data","rows","map","num","type","getType","isBig","React","useMemo","window","screen","width","TableContainer","component","maxHeight","Table","size","stickyHeader","TableHead","TableRow","StyledTableCell","align","TableBody","StyledTableRow","key","TableCell","withStyles","head","backgroundColor","palette","common","white","body","fontSize","default","App","useState","initialInput","setInput","open","setOpen","error","setError","handleClose","Alert","props","elevation","container","alignContent","sm","justify","avatar","src","alt","headerText","marginTop","alignItems","Container","CssBaseline","class","cols","onChange","e","target","placeholder","Button","onClick","err","replace","split","checkLexicalError","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","message","severity","length","height","position","backgroundImage","backgroundAttachment","backgroundSize","paddingTop","pointerEvents","userSelect","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.f5436889.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vahshi.db9f7ac9.png\";","const regex = /(((?:@[a-zA-Z]\\w*)\\b)|(\"[^\"]*\")|(\\b\\d+\\.\\d+\\b)|(\\b\\d+\\b)|(=)|(\\+)|(\\-)|(\\/)|(\\*)|(\\%)|(\\^)|(#)|(\\()|(\\))|(<<)|(>>)|(as)|(ifn)|(loop)|(on)|(by)|(say)|(get)|((?:::)|(?:>:)|(?:<:)|(?:[><&|])))/gi;\r\n\r\n\r\n\r\n\r\nexport const getTokens = (input, tokens = []) => {\r\n    for (let match = regex.exec(input); match; match = regex.exec(input))\r\n    tokens = [...tokens,{value: match[0],row: match.index,group: match.reduce((ac, v, i) => (v && i > 1 && i < ac ? i : ac),Infinity),},];\r\n    return tokens;\r\n  };\r\n\r\n\r\n\r\n  export const checkLexicalError = (input, setOpen, setError) => {\r\n  \r\n    let err = input\r\n      .replace(regex, \"\")\r\n      .replace(/([ \\t]+)/gi, \"\")\r\n      .split(\"\\n\")\r\n      .reduce((ac, v, i) => (v !== \"\" && i < ac[1] ? [v, i] : ac), [\r\n        \"\",\r\n        Infinity,\r\n      ]);\r\n    //console.log(err[0] + ' at line '+ err[1] + '');\r\n    if (err[0] !== \"\") {\r\n      setError(`unexpected token: \\`${err[0]}\\` near line ${err[1] + 1}`);\r\n      setOpen(true);\r\n    } else {\r\n      setError(``);\r\n      setOpen(true);\r\n    }\r\n  };","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Appbar = ({label}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n                <Typography\r\n                    style={{ fontFamily: \"Lilita One\", color: \"white\" }}\r\n                    variant=\"caption\"\r\n                >\r\n                    {label}\r\n            </Typography>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Appbar;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: \"left\",\r\n        background: \"#1a237e\",\r\n        borderRadius:'0',\r\n      },\r\n}));","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n\r\n        \r\n        \r\n\r\n    },\r\n\r\n    tableCell: {\r\n        paddingRight: 4,\r\n        paddingLeft: 5\r\n    }\r\n\r\n});\r\n\r\nfunction createData(num, value, type, row, ) {\r\n    \r\n    return { num, value, type, row,};\r\n    \r\n}\r\n\r\n\r\n\r\nexport default function SimpleTable({ data }) {\r\n    const classes = useStyles();\r\n    const rows = data.map((v, i) => createData(`#${i + 1}`, v.value, getType[v.group], v.row));\r\n    const isBig = React.useMemo(()=>window.screen.width > 430,[window.screen.width])\r\n    //   const rows = [\r\n    //     createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    //     createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    //     createData('Eclair', 262, 16.0, 24, 6.0),\r\n    //     createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    //     createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n    //   ];\r\n    \r\n    return (\r\n        <TableContainer component={Paper} style={{ maxHeight: '400px' }} >\r\n            <Table className={classes.table} size=\"small\" stickyHeader>\r\n                <TableHead >\r\n                    <TableRow >\r\n                        {isBig?<StyledTableCell align=\"center\" >Num</StyledTableCell>:null}\r\n                        <StyledTableCell align=\"center\" >Value</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">Type</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">Pos</StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map((row) => (\r\n                        <StyledTableRow key={row.num}>\r\n                            {isBig?<TableCell align=\"center\" >\r\n                                {row.num}\r\n                            </TableCell>:null}\r\n\r\n                            <TableCell align=\"center\">{row.value}</TableCell>\r\n                            <TableCell align=\"center\">{row.type}</TableCell>\r\n                            <TableCell align=\"center\">{row.row}</TableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nlet getType = ['', '',\r\n    'VARIABLE', 'STRING',\r\n    'FLOAT', 'INTEGER',\r\n    'EQUAL', 'PLUS', 'MINUS', 'DIV', 'MULT', 'REMAINDER', 'POWER',\r\n    'STATEMENT_SEPARATOR',\r\n    'LPAREN', 'RPAREN',\r\n    'OPEN_STATEMENT',\r\n    'CLOSE_STATEMENT',\r\n    'KEYWORD', 'KEYWORD',\r\n    'KEYWORD', 'KEYWORD',\r\n    'KEYWORD', 'KEYWORD',\r\n    'KEYWORD', 'LOGICAL_OPERATOR'];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: `#1a237e`,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n}))(TableRow);\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"./App.css\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { getTokens, checkLexicalError } from \"./functions/lexical\";\nimport Appbar from \"./component/sourceAppbar/appbar.component\";\nimport Table from \"./component/token-table/token-table.component\";\nimport Vahshiimg from \"./assets/vahshi.png\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Button from \"@material-ui/core/Button\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nfunction App() {\n  const classes = useStyles();\n  const [input, setInput] = React.useState(initialInput);\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = React.useState(``);\n  const handleInputChange = (e) => setInput(e.target.value);\n  const handleClose = () => setOpen(false);\n  const Alert = (props) => (\n    <MuiAlert elevation={6} variant=\"filled\" {...props} />\n  );\n\n  return (\n    <>\n      <Grid container className={classes.root} alignContent=\"flex-start\">\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Grid container>\n              <Grid item xs={2} sm={1}>\n                <Grid container justify=\"center\">\n                  <img\n                    className={classes.avatar}\n                    src=\"https://i.ganjoor.net/vahshi.gif\"\n                    alt=\"Vahshi\"\n                  />\n                </Grid>\n              </Grid>\n              <Grid item xs={8} sm={4}>\n                <Typography className={classes.headerText} variant=\"h5\">\n                  VahshiBafghi 1.0.2\n                </Typography>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} style={{ marginTop: \"16px\" }}>\n          <Grid container justify=\"space-between\" alignItems=\"stretch\">\n            <Grid item xs={12} sm={6} >\n              <Container >\n                <CssBaseline />\n                <Appbar label={\"Source File\"} />\n                <div class=\"textarea-wrapper\">\n                  <textarea\n                    rows=\"8\"\n                    cols=\"30\"\n                    value={input}\n                    onChange={handleInputChange}\n                    placeholder=\"Type here...\"\n                  />\n                </div>\n                <Button\n                style={{marginTop:'6px'}}\n                variant=\"contained\"\n                onClick={() => checkLexicalError(input, setOpen, setError)}\n              >\n                Check\n              </Button>\n              </Container>\n              \n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Container>\n                <CssBaseline />\n                <Table data={getTokens(input)} />\n              </Container>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n\n      <Snackbar\n        autoHideDuration={6000}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        key={`bottom ,left`}\n        open={open}\n        onClose={handleClose}\n        message={error}\n      >\n        <Alert\n          onClose={handleClose}\n          severity={error.length === 0 ? \"success\" : `error`}\n        >\n          {error.length === 0 ? \"There is no invalid token\" : error}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}\n\nexport default App;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: \"#fafafa\",\n    height: \"100%\",\n    width: \"100%\",\n    position: \"absolute\",\n    backgroundColor: \"#ffaa00\",\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' viewBox='0 0 1600 800'%3E%3Cg %3E%3Cpath fill='%23ffb100' d='M486 705.8c-109.3-21.8-223.4-32.2-335.3-19.4C99.5 692.1 49 703 0 719.8V800h843.8c-115.9-33.2-230.8-68.1-347.6-92.2C492.8 707.1 489.4 706.5 486 705.8z'/%3E%3Cpath fill='%23ffb800' d='M1600 0H0v719.8c49-16.8 99.5-27.8 150.7-33.5c111.9-12.7 226-2.4 335.3 19.4c3.4 0.7 6.8 1.4 10.2 2c116.8 24 231.7 59 347.6 92.2H1600V0z'/%3E%3Cpath fill='%23ffbf00' d='M478.4 581c3.2 0.8 6.4 1.7 9.5 2.5c196.2 52.5 388.7 133.5 593.5 176.6c174.2 36.6 349.5 29.2 518.6-10.2V0H0v574.9c52.3-17.6 106.5-27.7 161.1-30.9C268.4 537.4 375.7 554.2 478.4 581z'/%3E%3Cpath fill='%23ffc500' d='M0 0v429.4c55.6-18.4 113.5-27.3 171.4-27.7c102.8-0.8 203.2 22.7 299.3 54.5c3 1 5.9 2 8.9 3c183.6 62 365.7 146.1 562.4 192.1c186.7 43.7 376.3 34.4 557.9-12.6V0H0z'/%3E%3Cpath fill='%23ffcc00' d='M181.8 259.4c98.2 6 191.9 35.2 281.3 72.1c2.8 1.1 5.5 2.3 8.3 3.4c171 71.6 342.7 158.5 531.3 207.7c198.8 51.8 403.4 40.8 597.3-14.8V0H0v283.2C59 263.6 120.6 255.7 181.8 259.4z'/%3E%3Cpath fill='%23ffd624' d='M1600 0H0v136.3c62.3-20.9 127.7-27.5 192.2-19.2c93.6 12.1 180.5 47.7 263.3 89.6c2.6 1.3 5.1 2.6 7.7 3.9c158.4 81.1 319.7 170.9 500.3 223.2c210.5 61 430.8 49 636.6-16.6V0z'/%3E%3Cpath fill='%23ffe038' d='M454.9 86.3C600.7 177 751.6 269.3 924.1 325c208.6 67.4 431.3 60.8 637.9-5.3c12.8-4.1 25.4-8.4 38.1-12.9V0H288.1c56 21.3 108.7 50.6 159.7 82C450.2 83.4 452.5 84.9 454.9 86.3z'/%3E%3Cpath fill='%23ffeb49' d='M1600 0H498c118.1 85.8 243.5 164.5 386.8 216.2c191.8 69.2 400 74.7 595 21.1c40.8-11.2 81.1-25.2 120.3-41.7V0z'/%3E%3Cpath fill='%23fff558' d='M1397.5 154.8c47.2-10.6 93.6-25.3 138.6-43.8c21.7-8.9 43-18.8 63.9-29.5V0H643.4c62.9 41.7 129.7 78.2 202.1 107.4C1020.4 178.1 1214.2 196.1 1397.5 154.8z'/%3E%3Cpath fill='%23ffff66' d='M1315.3 72.4c75.3-12.6 148.9-37.1 216.8-72.4h-723C966.8 71 1144.7 101 1315.3 72.4z'/%3E%3C/g%3E%3C/svg%3E\")`,\n    backgroundAttachment: \"fixed\",\n    backgroundSize: \"cover\",\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"left\",\n    background: \"#00c853\",\n    borderRadius: \"0\",\n  },\n  headerText: {\n    fontFamily: \"Lilita One\",\n    color: \"white\",\n    paddingTop: \"9px\",\n  },\n  avatar: {\n    height: \"50px\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n  },\n}));\n\nconst initialInput = `@age = 20#\nas(@age >: 20)<<\nsay \"You are too old.\"#\n>>\nifn(@age < 20 )<<\n\tsay \"Young dude\"#\n>>\n\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}