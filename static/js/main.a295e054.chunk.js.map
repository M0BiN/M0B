{"version":3,"sources":["functions/SyntaxAnalyzer.js","functions/parseTable.js","functions/semanticAnalyzer.js","component/token-table/token-table.component.jsx","functions/lexical.js","component/sourceAppbar/appbar.component.jsx","App.js","serviceWorker.js","index.js"],"names":["errorManager","parseTable22","S","VARIABLE","CLOSE_STATEMENT","$","AS","LOOP","SAY","UNTIL","BREAK","Statement","DeclareVar","DefineVar","EQUAL","DELIMITER","Exp","STRING","FLOAT","INTEGER","NOT","SIGN","LPAREN","GET","BOOLEAN","Exp2","Exp3","RPAREN","OR","ON","Exp4","Exp5","AND","Exp6","Exp7","COMP1","Exp8","Exp9","COMP2","Exp10","Exp11","Exp12","Exp13","MATH_OPERATOR","Exp14","Exp15","POWER","Exp16","Literal","AsStatement","IfnStatement","IFN","FINALLY","FinallyStatement","LoopStatement","StepSign","SayStatement","BreakStatement","UntilStatement","isLoop","current","includes","type","DFS","ast","loopParent","i","length","currentparent","code","init","evaluate","condition","hasBody","body","alternate","finally","exp","isLiteral","evaluateType","isUnary","evaUnary","operator","left","leftChild","right","rightChild","resultType","validation","result","getResult","a","value","console","log","SemanticAnalyzer","em","start","e","isComp1","isLogicComp","LogicalType","isOperator","isComparison","v","isComp2","parseInt","parseFloat","line","checkSyntax","tokens","k","myParser22","filter","getType2","getNode","rule","array","arr","declareVarNode","forEach","Identifier","expNode","yaro","pop","push","slice","shift","last","unshift","stepSign","by","rules","token","currentToken","currentRule","nextRules","sub","out","Array","useStyles","makeStyles","table","tableCell","paddingRight","paddingLeft","SimpleTable","data","classes","rows","group","map","num","getType","row","isBig","React","useMemo","window","screen","width","TableContainer","component","Paper","style","maxHeight","Table","className","size","stickyHeader","TableHead","TableRow","StyledTableCell","align","TableBody","StyledTableRow","key","TableCell","withStyles","theme","head","backgroundColor","color","palette","common","white","fontSize","root","background","default","regex","isToken","getGroup","isLine","match","reduce","ac","Infinity","addToken","Appbar","label","Grid","item","xs","paper","Typography","fontFamily","variant","flexGrow","menuButton","marginRight","spacing","title","padding","textAlign","borderRadius","App","useState","initialInput","input","setInput","setTable","open","setOpen","error","setError","disable","setDisable","handleClose","Alert","props","elevation","container","alignContent","sm","justify","avatar","src","alt","headerText","marginTop","alignItems","Container","CssBaseline","class","cols","onChange","target","placeholder","Button","disabled","onClick","setTimeout","lastIndex","exec","index","JSON","parse","stringify","getTokens","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","message","severity","height","position","backgroundImage","backgroundAttachment","backgroundSize","paddingTop","pointerEvents","userSelect","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a295e054.chunk.js","sourcesContent":["import {parseTable,parseTable22} from './parseTable'\r\nimport { configure } from '@testing-library/react';\r\nimport SemanticAnalyzer from './semanticAnalyzer';\r\nlet errorManager;\r\n\r\n\r\nexport const checkSyntax = (tokens, em, rulesStack = ['$','S'])=>{\r\n  errorManager = em\r\n  //console.log(tokens)\r\n  let mainAST = {type:'Program', body:[]};\r\n  let declareVarNode = {type:'DeclareVarStatement', Identifier:'varName',init:'Exp'};\r\n  let expNode = {type:'Exp', operator:'', leftChild:'',rightChild:''};\r\n  let untilNode = {type:'UntileStatement',Condition:'exp', body:[]};\r\n  let asNode = {type:'UntileStatement',Condition:'exp', body:[], alternate:{}};\r\n  let sayNode = {type:'SayStatement',exp:''};\r\n  let loopNode = {type:'LoopStatement',Identifier:'varName',init:'Exp',step:'Exp',by:'', body:[]};\r\n  let unaryExpNode = {type:'UnaryExpressionNode',operator:'', argument:{}};\r\n  let literalNode = {type:'UnaryExpressionNode',value:'', argument:{}};\r\n\r\nlet k = myParser22(['S','$'],tokens);\r\n\r\nif(k)SemanticAnalyzer(k.filter(v=>!['Lambda','$'].includes(v?.type)), em, 'start');\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const isTerminal = (token) =>{\r\n      return getType2[token];\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\nconst getType2 = {\r\n'VARIABLE':true, 'STRING':true,\r\n'FLOAT':true, 'INTEGER':true,'NOT':true,\r\n'EQUAL':true, 'SIGN':true, 'SIGN':true, 'MATH_OPERATOR':true, 'MATH_OPERATOR':true, 'MATH_OPERATOR':true, 'POWER':true,\r\n'DELIMITER':true,\r\n'LPAREN':true, 'RPAREN':true,\r\n'OPEN_STATEMENT':true,\r\n'CLOSE_STATEMENT':true,\r\n'AS':true, 'IFN':true,\r\n'LOOP':true, 'ON':true,\r\n'BY':true, 'SAY':true,'BREAK':true,'GET':true,'FINALLY':true,\r\n'UNTIL':true, 'COMP1':true,'COMP2':true,'AND':true,'OR':true,'COMMENT':true,'$':true};\r\n\r\n\r\n\r\n\r\n// let mainAST = {type:'Program', body:[]};\r\n// let declareVarNode = {type:'DeclareVarStatement', Identifier:'varName',init:'Exp'};\r\n// let expNode = {type:'Exp', operator:'', leftChild:'',rightChild:''};\r\n// let untilNode = {type:'UntileStatement',Condition:'exp', body:[]};\r\n// let asNode = {type:'UntileStatement',Condition:'exp', body:[], alternate:{}};\r\n// let sayNode = {type:'SayStatement',exp:''};\r\n// let loopNode = {type:'LoopStatement',Identifier:'varName',init:'Exp',step:'Exp',by:'', body:[]};\r\n// let unaryExpNode = {type:'UnaryExpressionNode',operator:'', argument:{}};\r\n// let literalNode = {type:'UnaryExpressionNode',value:'', argument:{}};\r\n\r\nconst getNode = (rule)=>({\r\n\r\n    S: (array)=>{\r\n      \r\n        let arr = array?.filter((v,i)=>v?.value!=='Lambda');\r\n        return arr.length > 1 ? arr : arr[0];\r\n    },\r\n    Statement:  (array)=>array[0],\r\n    DeclareVar:  (array)=>{\r\n      \r\n      let declareVarNode = {type:'DeclareVarStatement'};\r\n      array.forEach(v=>{\r\n        if(!declareVarNode.Identifier && v?.type==='VARIABLE'){\r\n          declareVarNode = {...declareVarNode, Identifier:v}\r\n        }else\r\n        if(!declareVarNode.init && (v?.type==='VARIABLE' || v?.type==='Literal' || v?.type==='Exp' || isLiteral(v) || v?.type==='UnaryExpression')){\r\n          declareVarNode = {...declareVarNode, init:v}\r\n        }\r\n      })\r\n      return declareVarNode;\r\n     \r\n      \r\n    },\r\n    DefineVar:  (array)=>{\r\n      return  array\r\n      let declareVarNode = {type:'DefineVar'};\r\n      console.log('aaaaaahhhhhhhhaaaaaaaaaa')\r\n      console.log(array)\r\n      // array.forEach(v=>{\r\n      //   if(!declareVarNode.Identifier && v?.type==='VARIABLE'){\r\n      //     declareVarNode = {...declareVarNode, Identifier:v}\r\n      //   }\r\n      // })\r\n      return declareVarNode;\r\n    },\r\n    Exp:    (array)=>{\r\n      let expNode = {type:'Exp'};\r\n\r\n      array = array.filter(v=>v.type!=='Lambda');\r\n      if(array[array.length - 1]?.type === 'HalfExp'){\r\n        let yaro = array.pop();\r\n        array.push(yaro.operator, yaro.leftChild)\r\n      }\r\n      if(array.length === 1)return array[0];\r\n      array.forEach(v=>{\r\n        if(!expNode.leftChild && (v?.type==='VARIABLE' || v?.type==='Exp' ||v?.type==='Literal' || isLiteral(v) || v?.type==='UnaryExpression')){\r\n          expNode = {...expNode, leftChild:v}\r\n        }else\r\n        if(!expNode.operator && (isOperator(v) || v?.type==='HalfExp')){\r\n          expNode = {...expNode, operator:v}\r\n      }else\r\n        if(!expNode.rightChild && (v?.type==='VARIABLE' || v?.type==='Exp'|| v?.type==='HalfExp'  ||v?.type==='Literal' || isLiteral(v) || v?.type==='UnaryExpression')){\r\n          expNode = {...expNode, rightChild:v}\r\n      }\r\n    })\r\n\r\n    return expNode;\r\n    },\r\n    Exp2:   (array)=>getNode('Exp')(array),\r\n    Exp3:   (array)=>{\r\n\r\n      let expNode = {type:'HalfExp'};\r\n      array = array.filter(v=>v.type!=='Lambda');\r\n      if(array.length === 0)return {type:'Lambda'};\r\n      array.forEach(v=>{\r\n        if(!expNode.Exp && (v?.type==='VARIABLE' || v?.type==='Exp' ||v?.type==='Literal' ||v?.type==='UnaryExpression'  || isLiteral(v) )){\r\n          expNode = {...expNode, leftChild:v}\r\n        }else\r\n        if(!expNode.operator && isOperator(v)){\r\n          expNode = {...expNode, operator:v}\r\n      }\r\n    })\r\n    \r\n    return expNode;\r\n    },\r\n    Exp4:   (array)=> getNode('Exp')(array),\r\n    Exp5:   (array)=>getNode('Exp3')(array),\r\n    Exp6:   (array)=>getNode('Exp')(array),\r\n    Exp7:   (array)=>getNode('Exp3')(array),\r\n    Exp8:   (array)=>getNode('Exp')(array),\r\n    Exp9:   (array)=>getNode('Exp3')(array),\r\n    Exp10:  (array)=>getNode('Exp')(array),\r\n    Exp11:  (array)=>getNode('Exp3')(array),\r\n    Exp12:  (array)=>getNode('Exp')(array),\r\n    Exp13:  (array)=>getNode('Exp3')(array),\r\n    Exp14:  (array)=>{\r\n      //console.log(array)\r\n      if(array.length===1)return array[0];\r\n      return {type:'UnaryExpression', operator:array[0], init:array[1]};\r\n      \r\n    },\r\n    Exp15:   (array)=>getNode('Exp3')(array),\r\n    Exp16:   (array)=> {\r\n      \r\n\r\n      return array?.length === 1 ? array[0] : array[1]\r\n    }\r\n      ,\r\n    Literal:  (array)=>array[0],\r\n    AsStatement:  (array)=>{\r\n      array = array.slice(2);\r\n      let expNode = {type:'AsStatement', condition:array.shift(), body:[]};\r\n      //let asNode = {type:'UntileStatement',Condition:'exp', body:[], alternate:{}};\r\n      let last = array.pop();\r\n      if(last.type==='FINALLY'){\r\n        expNode.finally = last;\r\n        last = array.pop();\r\n      }\r\n      if(last.type==='IfnStatement'){\r\n        expNode.alternate = last;\r\n        last = array.pop();\r\n      }\r\n      if(last.type==='CLOSE_STATEMENT'){\r\n        //expNode.alternate = last;\r\n        //last = array.pop();\r\n      }\r\n      array = array.slice(2).filter(v=>!['Lambda','CLOSE_STATEMENT'].includes(v?.type));\r\n      while(array?.length)expNode.body.unshift(array.shift());\r\n      return expNode;\r\n\r\n      \r\n\r\n      \r\n    },\r\n    IfnStatement:   (array)=>{\r\n      if(array.length<=1)return{type:'Lambda'}\r\n      array = array.slice(2);\r\n      let expNode = {type:'IfnStatement', condition:array.shift(), body:[]};\r\n      //let asNode = {type:'UntileStatement',Condition:'exp', body:[], alternate:{}};\r\n      let last = array.pop();\r\n      if(last.type==='FINALLY'){\r\n        expNode.finally = last;\r\n        last = array.pop();\r\n      }\r\n      if(last.type==='IfnStatement'){\r\n        expNode.alternate = last;\r\n        last = array.pop();\r\n      }\r\n      if(last.type==='CLOSE_STATEMENT'){\r\n        //expNode.alternate = last;\r\n        //last = array.pop();\r\n      }\r\n      array = array.slice(2).filter(v=>!['Lambda','CLOSE_STATEMENT'].includes(v?.type));\r\n      while(array?.length)expNode.body.unshift(array.shift());\r\n      return expNode;\r\n    },\r\n    FinallyStatement:   (array)=>{\r\n      if(array?.length<=1)return{type:'Lambda'}\r\n      array = array?.slice(2).filter(v=>v?.type!=='Lambda');;\r\n      let expNode = {type:'FINALLY',  body:[]};\r\n      //let asNode = {type:'UntileStatement',Condition:'exp', body:[], alternate:{}};\r\n      let last = array?.pop();\r\n      \r\n      \r\n      while(array?.length)expNode.body.unshift(array.shift());\r\n      return expNode;\r\n    },\r\n    LoopStatement:  (array)=>({type:'LoopStatement',Identifier:array[3],init:array[1],stepSign:array[5],by:array[6], body:[...array.slice(8,-1).filter(v=>v?.type!=='Lambda')]}),\r\n    StepSign:  (array)=>array[0],\r\n    SayStatement:  (array)=> ({type:'SayStatement', init:array[1]}),\r\n    BreakStatement:  (array)=> ({type:'BreakStatement'}),\r\n    UntilStatement:  (array)=>({type:'UntileStatement',condition:array[2], body:[...array.slice(5,-1).filter(v=>v?.type!=='Lambda')]}),\r\n}\r\n  \r\n)[rule]\r\n\r\n\r\n\r\n\r\nconst isLiteral = (v)=>{\r\n  return v?.type==='STRING' || v?.type==='FLOAT'|| v?.type==='INTEGER'\r\n}\r\nconst isOperator = (v)=>{\r\n  return v?.type==='MATH_OPERATOR' || v?.type==='SIGN' ||v?.type==='COMP1' ||v?.type==='COMP2' || v?.type==='AND' || v?.type==='OR' || v?.type==='POWER'\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst myParser22 = (rules, tokens)=>{\r\n  let arr = [];\r\n  for(let i = 0; i < rules.length; i++){\r\n\r\n    if(rules[i]==='Lambda'){\r\n      return [{type:'Lambda'}]\r\n    }\r\n    else if(isTerminal(rules[i])){\r\n      let currentToken = tokens.shift();\r\n      if(currentToken?.type===rules?.[i]){\r\n        arr.push(currentToken);\r\n      }else{\r\n        errorManager({code:2, currentRule:rules?.[i], token:currentToken});\r\n        return undefined;\r\n      } \r\n    }else{\r\n      let nextRules = parseTable22[rules?.[i]]?.[tokens[0]?.type];\r\n      if(nextRules){\r\n        let sub = myParser22(nextRules, tokens);\r\n        if(sub){\r\n          //console.log(sub)\r\n          let out = getNode(rules[i])(sub);\r\n          if (out instanceof Array){\r\n            arr.push(...out);\r\n          }else arr.push(out)\r\n          \r\n        }else return undefined;\r\n       \r\n       \r\n      }else{ \r\n        errorManager({code:3,token:tokens[0]});\r\n        return undefined;}\r\n      \r\n    }\r\n\r\n  }\r\n  return arr;\r\n  \r\n\r\n}","export const parseTable22 = {\r\n    S: {VARIABLE:['Statement','S'],CLOSE_STATEMENT:['Lambda'],$:['Lambda'],AS:['Statement','S'],LOOP:['Statement','S'],SAY:['Statement','S'],UNTIL:['Statement','S'],BREAK:['Statement','S']},\r\n    Statement: {VARIABLE:['DeclareVar','DELIMITER'],AS:['AsStatement'],LOOP:['LoopStatement'],SAY:['SayStatement','DELIMITER'],UNTIL:['UntilStatement'],BREAK:['BreakStatement','DELIMITER']},\r\n    DeclareVar: {VARIABLE:['VARIABLE','DefineVar'],},\r\n    DefineVar: {EQUAL:['EQUAL','Exp'],DELIMITER:['Lambda'],},\r\n    Exp:   {VARIABLE:['Exp2','Exp3',],STRING:['Exp2','Exp3'],FLOAT:['Exp2','Exp3'],INTEGER:['Exp2','Exp3'],NOT:['Exp2','Exp3'],SIGN:['Exp2','Exp3'],LPAREN:['Exp2','Exp3'],GET:['Exp2','Exp3'],BOOLEAN:['Exp2','Exp3'],},\r\n    Exp2:  {VARIABLE:['Exp4','Exp5',],STRING:['Exp4','Exp5'],FLOAT:['Exp4','Exp5'],INTEGER:['Exp4','Exp5'],NOT:['Exp4','Exp5'],SIGN:['Exp4','Exp5'],LPAREN:['Exp4','Exp5'],GET:['Exp4','Exp5'],BOOLEAN:['Exp4','Exp5'],},\r\n    Exp3:  {DELIMITER:['Lambda'],RPAREN:['Lambda'],OR:['OR','Exp'],ON:['Lambda']},\r\n    Exp4:  {VARIABLE:['Exp6','Exp7',],STRING:['Exp6','Exp7'],FLOAT:['Exp6','Exp7'],INTEGER:['Exp6','Exp7'],NOT:['Exp6','Exp7'],SIGN:['Exp6','Exp7'],LPAREN:['Exp6','Exp7'],GET:['Exp6','Exp7'],BOOLEAN:['Exp6','Exp7'],},\r\n    Exp5:  {DELIMITER:['Lambda'],RPAREN:['Lambda'],OR:['Lambda'],AND:['AND','Exp2'], ON:['Lambda']},\r\n    Exp6:  {VARIABLE:['Exp8','Exp9',],STRING:['Exp8','Exp9'],FLOAT:['Exp8','Exp9'],INTEGER:['Exp8','Exp9'],NOT:['Exp8','Exp9'],SIGN:['Exp8','Exp9'],LPAREN:['Exp8','Exp9'],GET:['Exp8','Exp9'],BOOLEAN:['Exp8','Exp9'],},\r\n    Exp7:  {DELIMITER:['Lambda'],RPAREN:['Lambda'],COMP1:['COMP1','Exp4'],OR:['Lambda'],AND:['Lambda'], ON:['Lambda']},\r\n    Exp8:  {VARIABLE:['Exp10','Exp11',],STRING:['Exp10','Exp11'],FLOAT:['Exp10','Exp11'],INTEGER:['Exp10','Exp11'],NOT:['Exp10','Exp11'],SIGN:['Exp10','Exp11'],LPAREN:['Exp10','Exp11'],GET:['Exp10','Exp11'],BOOLEAN:['Exp10','Exp11'],},\r\n    Exp9:  {DELIMITER:['Lambda'],RPAREN:['Lambda'],COMP1:['Lambda'],COMP2:['COMP2','Exp6'],OR:['Lambda'],AND:['Lambda'], ON:['Lambda']},\r\n    Exp10: {VARIABLE:['Exp12','Exp13',],STRING:['Exp12','Exp13'],FLOAT:['Exp12','Exp13'],INTEGER:['Exp12','Exp13'],NOT:['Exp12','Exp13'],SIGN:['Exp12','Exp13'],LPAREN:['Exp12','Exp13'],GET:['Exp12','Exp13'],BOOLEAN:['Exp12','Exp13'],},\r\n    Exp11: {SIGN:['SIGN','Exp8'],DELIMITER:['Lambda'],RPAREN:['Lambda'],COMP1:['Lambda'],COMP2:['Lambda'],OR:['Lambda'],AND:['Lambda'], ON:['Lambda']},\r\n    Exp12: {VARIABLE:['Exp14','Exp15',],STRING:['Exp14','Exp15'],FLOAT:['Exp14','Exp15'],INTEGER:['Exp14','Exp15'],NOT:['Exp14','Exp15'],SIGN:['Exp14','Exp15'],LPAREN:['Exp14','Exp15'],GET:['Exp14','Exp15'],BOOLEAN:['Exp14','Exp15'],},\r\n    Exp13: {SIGN:['Lambda'],MATH_OPERATOR:['MATH_OPERATOR','Exp10'], DELIMITER:['Lambda'],RPAREN:['Lambda'],COMP1:['Lambda'],COMP2:['Lambda'],OR:['Lambda'],AND:['Lambda'], ON:['Lambda']},\r\n    Exp14: {VARIABLE:['Exp16'],STRING:['Exp16'],FLOAT:['Exp16'],INTEGER:['Exp16'],NOT:['NOT','Exp16'],SIGN:['SIGN','Exp16'],LPAREN:['Exp16'],GET:['Exp16'],BOOLEAN:['Exp16'],},\r\n    Exp15:  {SIGN:['Lambda'],MATH_OPERATOR:['Lambda'], DELIMITER:['Lambda'],POWER:['POWER','Exp12'], RPAREN:['Lambda'],COMP1:['Lambda'],COMP2:['Lambda'],OR:['Lambda'],AND:['Lambda'], ON:['Lambda']},\r\n    Exp16: {VARIABLE:['Literal'],STRING:['Literal'],FLOAT:['Literal'],INTEGER:['Literal'],NOT:['Literal'],SIGN:['Literal'],LPAREN:['LPAREN','Exp','RPAREN'],GET:['Literal'],BOOLEAN:['Literal'],},\r\n    Literal: {VARIABLE:['VARIABLE'],STRING:['STRING'],FLOAT:['FLOAT'],INTEGER:['INTEGER'],GET:['GET'],BOOLEAN:['BOOLEAN']},\r\n    AsStatement: {AS:['AS','LPAREN','Exp','RPAREN','OPEN_STATEMENT','S','CLOSE_STATEMENT','IfnStatement','FinallyStatement']},\r\n    IfnStatement: {VARIABLE:['Lambda'],CLOSE_STATEMENT:['Lambda'],$:['Lambda'], AS:['Lambda'],IFN:['IFN','LPAREN','Exp','RPAREN','OPEN_STATEMENT','S','CLOSE_STATEMENT','IfnStatement'],BREAK:['Lambda'], LOOP:['Lambda'],SAY:['Lambda'],UNTIL:['Lambda'],FINALLY:['Lambda']},\r\n    FinallyStatement: {VARIABLE:['Lambda'],CLOSE_STATEMENT:['Lambda'],$:['Lambda'], FINALLY:['FINALLY','OPEN_STATEMENT','S','CLOSE_STATEMENT'], LOOP:['Lambda'],SAY:['Lambda'],UNTIL:['Lambda'],BREAK:['Lambda']},\r\n    LoopStatement: {LOOP:['LOOP','Exp','ON','VARIABLE','BY','StepSign','INTEGER','OPEN_STATEMENT','S','CLOSE_STATEMENT']},\r\n    StepSign: {SIGN:['SIGN'],MATH_OPERATOR:['MATH_OPERATOR']},\r\n    SayStatement: {SAY:['SAY','Exp']},\r\n    BreakStatement: {BREAK:['BREAK']},\r\n    UntilStatement: {UNTIL:['UNTIL','LPAREN','Exp','RPAREN','OPEN_STATEMENT','S','CLOSE_STATEMENT']},\r\n  };\r\n  \r\n\r\n\r\n  export const parseTable = {\r\n    S: {VARIABLE:['S','Statement'],CLOSE_STATEMENT:['Lambda'],$:['Lambda'],AS:['S','Statement'],LOOP:['S','Statement'],SAY:['S','Statement'],UNTIL:['S','Statement']},\r\n    Statement: {VARIABLE:['DELIMITER','DeclareVar'],AS:['AsStatement'],LOOP:['LoopStatement'],SAY:['DELIMITER','SayStatement'],UNTIL:['UntilStatement']},\r\n    DeclareVar: {VARIABLE:['DefineVar','VARIABLE'],},\r\n    DefineVar: {EQUAL:['Exp','EQUAL'],DELIMITER:['Lambda'],},\r\n    Exp:   {VARIABLE:['Exp3','Exp2'],STRING:['Exp3','Exp2'],FLOAT:['Exp3','Exp2'],INTEGER:['Exp3','Exp2'],NOT:['Exp3','Exp2'],SIGN:['Exp3','Exp2'],LPAREN:['Exp3','Exp2'],GET:['Exp3','Exp2'],BOOLEAN:['Exp3','Exp2'],},\r\n    Exp2:  {VARIABLE:['Exp5','Exp4'],STRING:['Exp5','Exp4'],FLOAT:['Exp5','Exp4'],INTEGER:['Exp5','Exp4'],NOT:['Exp5','Exp4'],SIGN:['Exp5','Exp4'],LPAREN:['Exp5','Exp4'],GET:['Exp5','Exp4'],BOOLEAN:['Exp5','Exp4'],},\r\n    Exp3:  {DELIMITER:['Lambda'],RPAREN:['Lambda'],OR:['Exp','OR'],ON:['Lambda']},\r\n    Exp4:  {VARIABLE:['Exp7','Exp6'],STRING:['Exp7','Exp6'],FLOAT:['Exp7','Exp6'],INTEGER:['Exp7','Exp6'],NOT:['Exp7','Exp6'],SIGN:['Exp7','Exp6'],LPAREN:['Exp7','Exp6'],GET:['Exp7','Exp6'],BOOLEAN:['Exp7','Exp6'],},\r\n    Exp5:  {DELIMITER:['Lambda'],RPAREN:['Lambda'],OR:['Lambda'],AND:['Exp2','AND'], ON:['Lambda']},\r\n    Exp6:  {VARIABLE:['Exp9','Exp8'],STRING:['Exp9','Exp8'],FLOAT:['Exp9','Exp8'],INTEGER:['Exp9','Exp8'],NOT:['Exp9','Exp8'],SIGN:['Exp9','Exp8'],LPAREN:['Exp9','Exp8'],GET:['Exp9','Exp8'],BOOLEAN:['Exp9','Exp8'],},\r\n    Exp7:  {DELIMITER:['Lambda'],RPAREN:['Lambda'],COMP1:['Exp4','COMP1'],OR:['Lambda'],AND:['Lambda'], ON:['Lambda']},\r\n    Exp8:  {VARIABLE:['Exp11','Exp10'],STRING:['Exp11','Exp10'],FLOAT:['Exp11','Exp10'],INTEGER:['Exp11','Exp10'],NOT:['Exp11','Exp10'],SIGN:['Exp11','Exp10'],LPAREN:['Exp11','Exp10'],GET:['Exp11','Exp10'],BOOLEAN:['Exp11','Exp10'],},\r\n    Exp9:  {DELIMITER:['Lambda'],RPAREN:['Lambda'],COMP1:['Lambda'],COMP2:['Exp6','COMP2'],OR:['Lambda'],AND:['Lambda'], ON:['Lambda']},\r\n    Exp10: {VARIABLE:['Exp13','Exp12'],STRING:['Exp13','Exp12'],FLOAT:['Exp13','Exp12'],INTEGER:['Exp13','Exp12'],NOT:['Exp13','Exp12'],SIGN:['Exp13','Exp12'],LPAREN:['Exp13','Exp12'],GET:['Exp13','Exp12'],BOOLEAN:['Exp13','Exp12'],},\r\n    Exp11: {SIGN:['Exp8','SIGN'],DELIMITER:['Lambda'],RPAREN:['Lambda'],COMP1:['Lambda'],COMP2:['Lambda'],OR:['Lambda'],AND:['Lambda'], ON:['Lambda']},\r\n    Exp12: {VARIABLE:['Exp15','Exp14'],STRING:['Exp15','Exp14'],FLOAT:['Exp15','Exp14'],INTEGER:['Exp15','Exp14'],NOT:['Exp15','Exp14'],SIGN:['Exp15','Exp14'],LPAREN:['Exp15','Exp14'],GET:['Exp15','Exp14'],BOOLEAN:['Exp15','Exp14'],},\r\n    Exp13: {SIGN:['Lambda'],MATH_OPERATOR:['Exp10','MATH_OPERATOR'], DELIMITER:['Lambda'],RPAREN:['Lambda'],COMP1:['Lambda'],COMP2:['Lambda'],OR:['Lambda'],AND:['Lambda'], ON:['Lambda']},\r\n    Exp14: {VARIABLE:['Exp16'],STRING:['Exp16'],FLOAT:['Exp16'],INTEGER:['Exp16'],NOT:['Exp16','NOT'],SIGN:['Exp16','SIGN'],LPAREN:['Exp16'],GET:['Exp16'],BOOLEAN:['Exp16'],},\r\n    Exp15:  {SIGN:['Lambda'],MATH_OPERATOR:['Lambda'], DELIMITER:['Lambda'],POWER:['Exp12','POWER'], RPAREN:['Lambda'],COMP1:['Lambda'],COMP2:['Lambda'],OR:['Lambda'],AND:['Lambda'], ON:['Lambda']},\r\n    Exp16: {VARIABLE:['Literal'],STRING:['Literal'],FLOAT:['Literal'],INTEGER:['Literal'],NOT:['Literal'],SIGN:['Literal'],LPAREN:['RPAREN','Exp','LPAREN'],GET:['Literal'],BOOLEAN:['Literal'],},\r\n    Literal: {VARIABLE:['VARIABLE'],STRING:['STRING'],FLOAT:['FLOAT'],INTEGER:['INTEGER'],GET:['GET'],BOOLEAN:['BOOLEAN']},\r\n    AsStatement: {AS:['FinallyStatement','IfnStatement','CLOSE_STATEMENT','S','OPEN_STATEMENT','RPAREN','Exp','LPAREN','AS']},\r\n    IfnStatement: {VARIABLE:['Lambda'],CLOSE_STATEMENT:['Lambda'],$:['Lambda'], AS:['Lambda'],IFN:['IfnStatement','CLOSE_STATEMENT','S','OPEN_STATEMENT','RPAREN','Exp','LPAREN','IFN'], LOOP:['Lambda'],SAY:['Lambda'],UNTIL:['Lambda'],FINALLY:['Lambda']},\r\n    FinallyStatement: {VARIABLE:['Lambda'],CLOSE_STATEMENT:['Lambda'],$:['Lambda'], FINALLY:['CLOSE_STATEMENT','S','OPEN_STATEMENT','FINALLY'], LOOP:['Lambda'],SAY:['Lambda'],UNTIL:['Lambda']},\r\n    LoopStatement: {LOOP:['CLOSE_STATEMENT','S','OPEN_STATEMENT','INTEGER','StepSign','BY','VARIABLE','ON','Exp','LOOP']},\r\n    StepSign: {SIGN:['SIGN'],MATH_OPERATOR:['MATH_OPERATOR'],SAY:['Exp','SAY']},\r\n    SayStatement: {SAY:['Exp','SAY']},\r\n    UntilStatement: {UNTIL:['CLOSE_STATEMENT','S','OPEN_STATEMENT','RPAREN','Exp','LPAREN','UNTIL']},\r\n  };","\r\nconst SemanticAnalyzer = (ast, em, start) => {\r\n  console.log(ast)\r\n  try {\r\n const result = DFS(ast);\r\n  if(result)em(false);\r\n}catch(e){\r\n  em(e);\r\n}\r\n};\r\n\r\n\r\n\r\nconst isLoop = (current) => ['LoopStatement','UntileStatement'].includes(current.type);\r\n\r\nconst DFS = (ast, loopParent)=>{\r\n  for(let i = 0; i < ast.length; i++){\r\n    const current = ast[i];\r\n    const currentparent = isLoop(current) ? true : loopParent;\r\n    //console.log(current)\r\n    if(current.type === 'BreakStatement'){\r\n      if(!loopParent){\r\n        throw {code:7};\r\n      }\r\n    }\r\n    if(current.init){\r\n      if(!evaluate(current.init, currentparent)){\r\n            return;\r\n      }\r\n  }\r\n  if(current.condition){\r\n    if(!evaluate(current.condition, currentparent)){\r\n          return;\r\n    }\r\n}\r\nif(hasBody(current) && !DFS(current.body, currentparent)){\r\n  return;\r\n}\r\n\r\nif(current.alternate){\r\n  if(!evaluate(current?.alternate?.condition, currentparent)){\r\n    return;\r\n}\r\nif(!DFS([current?.alternate], currentparent)){\r\n  return;\r\n}\r\n    \r\n    \r\n}\r\nif(current.finally && !DFS([current?.finally], currentparent)){\r\n  return;\r\n  \r\n}\r\n\r\n\r\n\r\n  }\r\n  \r\nreturn true;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst evaluate = (exp) => {\r\n  \r\n  if (isLiteral(exp)) return {...exp, evaluateType:(exp?.evaluateType)?(exp?.evaluateType):exp.type,};\r\n  if (isUnary(exp)) return {...exp, evaluateType:evaUnary(evaluate(exp.init),exp.operator) };\r\n  const left = evaluate(exp.leftChild);\r\n  const right = evaluate(exp.rightChild);\r\n  const resultType = validation[left?.evaluateType]?.[right?.evaluateType]?.(exp?.operator);\r\n  \r\n  if(resultType){\r\n    const result = getResult(left, right, exp.operator, resultType);\r\n    let a = result ? {...left, value:result.value, evaluateType:result.evaluateType } : {...exp,evaluateType:resultType} ;\r\n    console.log(a)\r\n    return a;\r\n  } \r\n  \r\n  throw {code:4, left, right, operator:exp.operator};\r\n//@age = 20/ ( 10/10 - 1)#\r\n\r\n};\r\n\r\nexport default SemanticAnalyzer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validation = {\r\n  STRING: {\r\n    STRING: (operator) => (operator?.value === \"+\" ? \"STRING\" : isComp1(operator) || isLogicComp(operator) ? 'BOOLEAN' : null),\r\n    INTEGER: (operator) => (operator?.value === \"+\" ? \"STRING\" : isLogicComp(operator) ? 'BOOLEAN' : null) ,\r\n    FLOAT: (operator) => (operator?.value === \"+\" ? \"STRING\" : isLogicComp(operator) ? 'BOOLEAN' : null),\r\n    VARIABLE: (operator) => (operator?.value === \"+\" ? \"VARIABLE\" : isComp1(operator) || isLogicComp(operator) ? 'BOOLEAN' : null),\r\n    BOOLEAN: (operator) => LogicalType(operator)? 'BOOLEAN' : null,\r\n    \r\n  },\r\n  INTEGER: {\r\n    INTEGER: (operator) => (isOperator(operator) ? \"INTEGER\" : isComparison(operator) || isLogicComp(operator) ? 'BOOLEAN' : null),\r\n    FLOAT: (operator) => (isOperator(operator) ? \"FLOAT\" : isComparison(operator) || isLogicComp(operator) ? 'BOOLEAN' : null),\r\n    VARIABLE: (operator) => (isOperator(operator) ? \"VARIABLE\" : isComparison(operator) || isLogicComp(operator) ? 'BOOLEAN' : null),\r\n    BOOLEAN: (operator) => LogicalType(operator),\r\n    //STRING: (operator) => LogicalType(operator) ? 'BOOLEAN' : null,\r\n    STRING: (operator) => (operator?.value === \"+\" ? \"STRING\" : isLogicComp(operator) ? 'BOOLEAN' : null) ,\r\n\r\n  },\r\n  FLOAT: {\r\n    INTEGER: (operator) => (isOperator(operator) ? \"FLOAT\" : isComparison(operator) || isLogicComp(operator) ? 'BOOLEAN' : null),\r\n    FLOAT: (operator) => (isOperator(operator) ? \"FLOAT\" : isComparison(operator) || isLogicComp(operator) ? 'BOOLEAN' : null),\r\n    VARIABLE: (operator) => (isOperator(operator) ? \"VARIABLE\" : isComparison(operator) || isLogicComp(operator) ? 'BOOLEAN' : null),\r\n    BOOLEAN: (operator) => LogicalType(operator) ? 'BOOLEAN' : null,\r\n    STRING: (operator) => LogicalType(operator)? 'BOOLEAN' : null,\r\n  },\r\n  VARIABLE: {\r\n    INTEGER: (operator) => (isOperator(operator) ? \"VARIABLE\" : isComparison(operator) || isLogicComp(operator) ? 'VARIABLE' : null),\r\n    FLOAT: (operator) => (isOperator(operator) ? \"VARIABLE\" : isComparison(operator) || isLogicComp(operator) ? 'VARIABLE' : null),\r\n    VARIABLE: (operator) => (isOperator(operator) ? \"VARIABLE\" : isComparison(operator) || isLogicComp(operator) ? 'VARIABLE' : null),\r\n    BOOLEAN: (operator) => LogicalType(operator) ? 'VARIABLE' : null,\r\n    STRING: (operator) => LogicalType(operator)? 'VARIABLE' : null,\r\n  },\r\n  BOOLEAN: {\r\n    INTEGER: (operator) => LogicalType(operator) ? 'BOOLEAN' : null,\r\n    FLOAT: (operator) => LogicalType(operator) ? 'BOOLEAN' : null,\r\n    VARIABLE: (operator) => LogicalType(operator) ? 'BOOLEAN' : null,\r\n    BOOLEAN: (operator) => LogicalType(operator) ? 'BOOLEAN' : null,\r\n    STRING: (operator) => LogicalType(operator) ? 'BOOLEAN' : null,\r\n  },\r\n};\r\n\r\nconst LogicalType = (v) => (isLogicComp(v) ? 'BOOLEAN' : null);\r\n\r\nconst isMathOperator = (v) => ['+','-','*','/'].includes(v?.type);\r\n\r\nconst isComparison = (v) => isComp1(v) || isComp2(v);\r\n\r\nconst isComp1 = (v) =>['COMP1'].includes(v?.type);\r\n    \r\nconst isComp2 = (v) => ['COMP2'].includes(v?.type);\r\n    \r\nconst isLogicComp = (v) => ['AND','OR'].includes(v?.type);\r\n    \r\nconst hasBody = (v) => ['UntileStatement','LoopStatement','FINALLY','IfnStatement','AsStatement'].includes(v?.type);\r\n\r\nconst isLiteral = (v) =>['STRING','FLOAT','INTEGER','BOOLEAN','VARIABLE'].includes(v?.type);\r\n\r\nconst isOperator = (v) => {console.log(v); return['MATH_OPERATOR','SIGN','POWER'].includes(v?.type)};\r\n\r\nconst isUnary = (v) => ['UnaryExpression'].includes(v?.type);\r\n\r\nconst evaUnary = (exp, operator)=>{\r\n\r\n  switch(exp.evaluateType + operator.value){\r\n\r\n\r\n    case `INTEGER+`:return exp;\r\n    case `INTEGER-`:return {...exp,evaluateType:'INTEGER', value:\"\"+parseInt(exp.value)*-1};\r\n\r\n    case `FLOAT+`:return exp;\r\n    case `FLOAT-`:return {...exp,evaluateType:'FLOAT', value:\"\"+parseFloat(exp.value)*-1};\r\n\r\n    case `VARIABLE+`:return {...exp, evaluateType:'VARIABLE',};\r\n    case `VARIABLE-`:return {...exp, evaluateType:'VARIABLE',};\r\n\r\n    case `FLOAT!`:return {...exp,evaluateType:'BOOLEAN',};\r\n    case `INTEGER!`:return {...exp, evaluateType:'BOOLEAN',};\r\n    case `STRING!`:return {...exp,evaluateType:'BOOLEAN',};\r\n    case `VARIABLE!`:return {...exp,evaluateType:'BOOLEAN',};\r\n    case `BOOLEAN!`:return {...exp,evaluateType:'BOOLEAN',};\r\n\r\n    default: throw {code:5, left:exp, operator};\r\n\r\n  }\r\n  \r\n}\r\n\r\nconst getResult = (left, right, operator, resultType) => {\r\n  \r\n  switch (operator.value + resultType) {\r\n    case \"+STRING\":\r\n      return {evaluateType:resultType, value: left.value + right.value};\r\n    case \"+INTEGER\":\r\n      return {evaluateType:resultType, value: parseInt(left.value) + parseInt(right.value)};\r\n    case \"-INTEGER\":\r\n      return {evaluateType:resultType, value: parseInt(left.value) - parseInt(right.value)};\r\n    case \"*INTEGER\":\r\n      return {evaluateType:resultType, value: parseInt(left.value) * parseInt(right.value)};\r\n    case \"/INTEGER\":{\r\n      if(parseInt(right.value)===0){\r\n        throw {code:6, line:left.line}\r\n      }\r\n      if(parseInt(left.value) % parseInt(right.value) === 0){\r\n          \r\n          return {evaluateType:resultType, value: parseInt(left.value) / parseInt(right.value)};\r\n      };\r\n      return {evaluateType:`FLOAT`, value: parseFloat(left.value) / parseFloat(right.value)}\r\n      \r\n    }\r\n    case \"^INTEGER\":\r\n      return {evaluateType:resultType, value: parseInt(left.value) ** parseInt(right.value)};\r\n    case \"+FLOAT\":\r\n      return {evaluateType:resultType, value: parseFloat(left.value) + parseFloat(right.value)};\r\n    case \"-FLOAT\":\r\n      return {evaluateType:resultType, value: parseFloat(left.value) - parseFloat(right.value)};\r\n    case \"*FLOAT\":\r\n      return {evaluateType:resultType, value: parseFloat(left.value) * parseFloat(right.value)};\r\n    case \"/FLOAT\":{\r\n      if(parseFloat(right.value)===0){\r\n        throw {code:6, line:left.line}\r\n      }\r\n      return {evaluateType:resultType, value: parseFloat(left.value) / parseFloat(right.value)};\r\n    }\r\n      \r\n    case \"^FLOAT\":\r\n      return {evaluateType:resultType, value: parseFloat(left.value) ^ parseFloat(right.value)};\r\n  }\r\n};","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n\r\n        \r\n        \r\n\r\n    },\r\n\r\n    tableCell: {\r\n        paddingRight: 4,\r\n        paddingLeft: 5\r\n    }\r\n\r\n});\r\n\r\nfunction createData(num, value, type, row, ) {\r\n    \r\n    return { num, value, type, row,};\r\n    \r\n}\r\n\r\n\r\n\r\nexport default function SimpleTable({ data }) {\r\n    const classes = useStyles();\r\n    const rows = data.filter(v=>v.group!==32).map((v, i) => createData(`#${i + 1}`, v.value, getType[v.group], v.row));\r\n    const isBig = React.useMemo(()=>window.screen.width > 430,[window.screen.width])\r\n    //   const rows = [\r\n    //     createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    //     createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    //     createData('Eclair', 262, 16.0, 24, 6.0),\r\n    //     createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    //     createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n    //   ];\r\n    \r\n    return (\r\n        <TableContainer component={Paper} style={{ maxHeight: '400px' }} >\r\n            <Table className={classes.table} size=\"small\" stickyHeader>\r\n                <TableHead >\r\n                    <TableRow >\r\n                        {isBig?<StyledTableCell align=\"center\" >Num</StyledTableCell>:null}\r\n                        <StyledTableCell align=\"center\" >Value</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">Type</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">Pos</StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map((row) => (\r\n                        <StyledTableRow key={row.num}>\r\n                            {isBig?<TableCell align=\"center\" >\r\n                                {row.num}\r\n                            </TableCell>:null}\r\n\r\n                            <TableCell align=\"center\">{row.value}</TableCell>\r\n                            <TableCell align=\"center\">{row.type}</TableCell>\r\n                            <TableCell align=\"center\">{row.row}</TableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nexport let getType = ['', '',\r\n    'VARIABLE', 'STRING',\r\n    'FLOAT', 'INTEGER','NOT',\r\n    'EQUAL', 'SIGN', 'SIGN', 'MATH_OPERATOR', 'MATH_OPERATOR', 'MATH_OPERATOR', 'POWER',\r\n    'DELIMITER',\r\n    'LPAREN', 'RPAREN',\r\n    'OPEN_STATEMENT',\r\n    'CLOSE_STATEMENT',\r\n    'AS', 'IFN',\r\n    'LOOP', 'ON',\r\n    'BY', 'SAY','BREAK','GET','FINALLY',\r\n    'UNTIL', 'COMP1','COMP2','AND','OR','COMMENT'];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: `#1a237e`,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n}))(TableRow);\r\n// let getType = ['', '',\r\n//     'VARIABLE', 'STRING',\r\n//     'FLOAT', 'INTEGER','NOT',\r\n//     'EQUAL', 'PLUS', 'MINUS', 'DIV', 'MULT', 'REMAINDER', 'POWER',\r\n//     'DELIMITER',\r\n//     'LPAREN', 'RPAREN',\r\n//     'OPEN_STATEMENT',\r\n//     'CLOSE_STATEMENT',\r\n//     'KEYWORD', 'KEYWORD',\r\n//     'KEYWORD', 'KEYWORD',\r\n//     'KEYWORD', 'KEYWORD','KEYWORD','KEYWORD',\r\n//     'KEYWORD', 'LOGICAL_OPERATOR','COMMENT'];\r\n\r\n\r\n","import {checkSyntax} from './SyntaxAnalyzer';\r\nimport {getType} from '../component/token-table/token-table.component';\r\nconst regex = /(((?:@[a-zA-Z]\\w*)\\b)|(\"[^\"]*\")|(\\b\\d+\\.\\d+\\b)|(\\b\\d+\\b)|(\\!)|(=)|(\\+)|(\\-)|(\\/)|(\\*)|(\\%)|(\\^)|(#)|(\\()|(\\))|(<<)|(>>)|(as)|(ifn)|(loop)|(on)|(by)|(say)|(break)|(get)|(finally)|(until)|((?:::)|(?:\\\\:))|((?:>:)|(?:<:)|(?:[><]))|(\\&)|(\\|)|({.*})|(\\n)|([^\\s]+))/gi;\r\n\r\nexport const getTokens = (input,  errorManager, tokens = []) => {\r\n  regex.lastIndex = 0;\r\n   let line = 1;\r\n\r\n    for (let match = regex.exec(input); match; match = regex.exec(input)){\r\n      if(!isToken(match)){\r\n        errorManager({code:1, token:match[0], line});\r\n        \r\n        return [];\r\n      }\r\n      if(isLine(match))line++;\r\n      else tokens = addToken(match) ? [...tokens,{value: match[0],row: match.index, line, group: getGroup(match), type:getType[getGroup(match)]}] : tokens;\r\n    }\r\n    \r\n    \r\n   checkSyntax(JSON.parse(JSON.stringify([...tokens, {value: '$',row: 0, line, group: 0, type:'$'}])), errorManager);\r\n   //checkSyntax(JSON.parse(JSON.stringify(tokens)), errorManager);\r\n   //console.log(tokens)\r\n    return tokens;\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst isToken = (token)=> getGroup(token) !== 35 ;\r\nconst isLine = (token)=> getGroup(token) === 34 ;\r\nconst getGroup = (match)=> match.reduce((ac, v, i) => (v && i > 1 && i < ac ? i : ac),Infinity);\r\nconst addToken = (token)=>{\r\n  if(getGroup(token) === 32){\r\n    //line = line+1;\r\n    return false;\r\n  }\r\n  return getGroup(token) !== 34;\r\n} \r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Appbar = ({label}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n                <Typography\r\n                    style={{ fontFamily: \"Lilita One\", color: \"white\" }}\r\n                    variant=\"caption\"\r\n                >\r\n                    {label}\r\n            </Typography>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Appbar;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: \"left\",\r\n        background: \"#1a237e\",\r\n        borderRadius:'0',\r\n      },\r\n}));","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"./App.css\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { getTokens,  } from \"./functions/lexical\";\nimport Appbar from \"./component/sourceAppbar/appbar.component\";\nimport Table from \"./component/token-table/token-table.component\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Button from \"@material-ui/core/Button\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { checkSyntax } from \"./functions/SyntaxAnalyzer\";\nimport {parseTable} from './functions/parseTable';\n\nfunction App() {\n  \n  const classes = useStyles();\n  const [input, setInput] = React.useState(initialInput);\n  const [table, setTable] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = React.useState(`..`);\n  const [disable,setDisable] = React.useState(false);\n  const handleInputChange = (e) => setInput(e.target.value);\n  \n  const handleClose = () => setOpen(false);\n  const errorManager = ({code, token, currentRule, line, left, right, operator})=> {\n    setError('');\n    code===1 && setError(`LexicalError: Unknown token '${token}' near line ${line}`);\n    code===2 && setError(`SyntaxError: Expected '${currentRule}' at line: ${token.line}, got '${token.value}' instead `);\n    code===3 && setError(`SyntaxError: Unexpected token: '${token.value}' near line ${token.line} `);\n    //code===4 && setError(`SyntaxError`);\n    code===4 && setError(`TypeError: unsupported operand '${operator?.value}\\' for : '${left?.type}' and '${right?.type}' at line ${left?.line}`);\n    code===5 && setError(`TypeError: operator '${operator?.value}' cannot be applied to operand of type '${left?.evaluateType}'`);\n    code===6 && setError(`Error: Division by constant zero at line ${line}`);\n    code===7 && setError(`Outside loop break`);\n\n    setOpen(true);\n  }\n  \n  \n  const Alert = (props) => (\n    <MuiAlert elevation={6} variant=\"filled\" {...props} />\n  );\n  return (\n    <>\n      <Grid container className={classes.root} alignContent=\"flex-start\">\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Grid container>\n              <Grid item xs={2} sm={1}>\n                <Grid container justify=\"center\">\n                  <img\n                    className={classes.avatar}\n                    src=\"https://i.ganjoor.net/vahshi.gif\"\n                    alt=\"Vahshi\"\n                  />\n                </Grid>\n              </Grid>\n              <Grid item xs={8} sm={4}>\n                <Typography className={classes.headerText} variant=\"h5\">\n                  VahshiBafghi 1.0.2\n                </Typography>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} style={{ marginTop: \"16px\" }}>\n          <Grid container justify=\"space-between\" alignItems=\"stretch\">\n            <Grid item xs={12} sm={6} >\n              <Container >\n                <CssBaseline />\n                <Appbar label={\"Source File\"} />\n                <div class=\"textarea-wrapper\">\n                  <textarea\n                    rows=\"16\"\n                    cols=\"30\"\n                    value={input}\n                    onChange={handleInputChange}\n                    placeholder=\"Type here...\"\n                  />\n                </div>\n                <Button\n                style={{marginTop:'6px'}}\n                variant=\"contained\"\n                disabled={disable}\n                onClick={()=>{\n                  if(!disable){\n                    handleClose();\n                    setDisable(true);\n                    setTimeout(() => setDisable(false), 3000);\n                    setTimeout(() => setTable(getTokens(input,errorManager), 0) ?? []);\n                  }\n                  \n                  \n                  \n                }\n                \n                }\n              >\n                Run\n              </Button>\n              </Container>\n              \n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Container>\n                <CssBaseline />\n                <Table data={table} />\n              </Container>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n\n      <Snackbar\n        autoHideDuration={6000}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        key={`bottom ,left`}\n        open={open}\n        onClose={handleClose}\n        message={error}\n      >\n        <Alert\n          onClose={handleClose}\n          severity={error.length === 0 ? \"success\" : `error`}\n        >\n          {error.length === 0 ? \"Program has been run successfully\" : error}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}\n\nexport default App;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: \"#fafafa\",\n    height: \"100%\",\n    width: \"100%\",\n    position: \"absolute\",\n    backgroundColor: \"#ffaa00\",\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' viewBox='0 0 1600 800'%3E%3Cg %3E%3Cpath fill='%23ffb100' d='M486 705.8c-109.3-21.8-223.4-32.2-335.3-19.4C99.5 692.1 49 703 0 719.8V800h843.8c-115.9-33.2-230.8-68.1-347.6-92.2C492.8 707.1 489.4 706.5 486 705.8z'/%3E%3Cpath fill='%23ffb800' d='M1600 0H0v719.8c49-16.8 99.5-27.8 150.7-33.5c111.9-12.7 226-2.4 335.3 19.4c3.4 0.7 6.8 1.4 10.2 2c116.8 24 231.7 59 347.6 92.2H1600V0z'/%3E%3Cpath fill='%23ffbf00' d='M478.4 581c3.2 0.8 6.4 1.7 9.5 2.5c196.2 52.5 388.7 133.5 593.5 176.6c174.2 36.6 349.5 29.2 518.6-10.2V0H0v574.9c52.3-17.6 106.5-27.7 161.1-30.9C268.4 537.4 375.7 554.2 478.4 581z'/%3E%3Cpath fill='%23ffc500' d='M0 0v429.4c55.6-18.4 113.5-27.3 171.4-27.7c102.8-0.8 203.2 22.7 299.3 54.5c3 1 5.9 2 8.9 3c183.6 62 365.7 146.1 562.4 192.1c186.7 43.7 376.3 34.4 557.9-12.6V0H0z'/%3E%3Cpath fill='%23ffcc00' d='M181.8 259.4c98.2 6 191.9 35.2 281.3 72.1c2.8 1.1 5.5 2.3 8.3 3.4c171 71.6 342.7 158.5 531.3 207.7c198.8 51.8 403.4 40.8 597.3-14.8V0H0v283.2C59 263.6 120.6 255.7 181.8 259.4z'/%3E%3Cpath fill='%23ffd624' d='M1600 0H0v136.3c62.3-20.9 127.7-27.5 192.2-19.2c93.6 12.1 180.5 47.7 263.3 89.6c2.6 1.3 5.1 2.6 7.7 3.9c158.4 81.1 319.7 170.9 500.3 223.2c210.5 61 430.8 49 636.6-16.6V0z'/%3E%3Cpath fill='%23ffe038' d='M454.9 86.3C600.7 177 751.6 269.3 924.1 325c208.6 67.4 431.3 60.8 637.9-5.3c12.8-4.1 25.4-8.4 38.1-12.9V0H288.1c56 21.3 108.7 50.6 159.7 82C450.2 83.4 452.5 84.9 454.9 86.3z'/%3E%3Cpath fill='%23ffeb49' d='M1600 0H498c118.1 85.8 243.5 164.5 386.8 216.2c191.8 69.2 400 74.7 595 21.1c40.8-11.2 81.1-25.2 120.3-41.7V0z'/%3E%3Cpath fill='%23fff558' d='M1397.5 154.8c47.2-10.6 93.6-25.3 138.6-43.8c21.7-8.9 43-18.8 63.9-29.5V0H643.4c62.9 41.7 129.7 78.2 202.1 107.4C1020.4 178.1 1214.2 196.1 1397.5 154.8z'/%3E%3Cpath fill='%23ffff66' d='M1315.3 72.4c75.3-12.6 148.9-37.1 216.8-72.4h-723C966.8 71 1144.7 101 1315.3 72.4z'/%3E%3C/g%3E%3C/svg%3E\")`,\n    backgroundAttachment: \"fixed\",\n    backgroundSize: \"cover\",\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"left\",\n    background: \"#00c853\",\n    borderRadius: \"0\",\n  },\n  headerText: {\n    fontFamily: \"Lilita One\",\n    color: \"white\",\n    paddingTop: \"9px\",\n  },\n  avatar: {\n    height: \"50px\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n  },\n}));\n\nconst initialInput = `@age = 20#\nas(@age <: 20)<<\nsay \" too young.\"#\n>>\nifn(@age >: 60 )<<\n\tsay \"too old\"#\n>>\nfinally<<\nsay \"Not Too Young, Not Too Old\"#\n>>`;\n\n\n\n\nconst doIpStuff = ()=>{\n  let ipRe = /\\d+/g;\n  let ip = '192.168.1.1';\n  let prefix = 10;\n  getPrefixAndSubnetMask(prefix)\n  let SubnetMask = \"255.255.255.0\";\n  let BinaryIp = [];\n  let BinarySubnetMask = [];\n  for(let match = ipRe.exec(ip); match; match = ipRe.exec(ip) ){\n    BinaryIp.push(\"00000000\".substr((match[0] >>>0).toString(2).length) + (match[0] >>>0).toString(2))\n  }\n  for(let match = ipRe.exec(SubnetMask); match; match = ipRe.exec(SubnetMask) ){\n    BinaryIp.push(\"00000000\".substr((match[0] >>>0).toString(2).length) + (match[0] >>>0).toString(2))\n  }\n   \n  console.log(BinaryIp)\n\n\n\n};\n\n\n\n\n\n\n\n\n\n\n\nconst getPrefixAndSubnetMask = (prefix, subnetMask)=>{\n  if(prefix !== \"\"){\n    subnetMask = \"\";\n    let count = 0;\n    while(prefix > 0){\n      subnetMask = subnetMask + '1';\n      count++;\n      prefix--;\n      if(count === 8 && prefix>0){\n        subnetMask = subnetMask + '.';\n        count = 0;\n      }\n      \n    }\n    while(subnetMask.length < 35){\n      subnetMask = subnetMask + '0';\n      count++;\n      if(count===8 && subnetMask.length < 34){\n        count = 0;\n        subnetMask = subnetMask + '.';\n      }\n    }\n    console.log(subnetMask);\n\n  }\n  else {\n    \n  }\n}\n\n\n\n\nlet getType = ['', '',\n    'VARIABLE', 'STRING',\n    'FLOAT', 'INTEGER','NOT',\n    'EQUAL', 'SIGN', 'SIGN', 'MATH_OPERATOR', 'MATH_OPERATOR', 'MATH_OPERATOR', 'POWER',\n    'DELIMITER',\n    'LPAREN', 'RPAREN',\n    'OPEN_STATEMENT',\n    'CLOSE_STATEMENT',\n    'AS', 'IFN',\n    'LOOP', 'ON',\n    'BY', 'SAY','GET','FINALLY',\n    'UNTIL', 'COMP1','COMP2','AND','OR','COMMENT'];\n\n\n\n    const isTerminal = (token) =>{\n      return getType2[token];\n    }\n\n\n\n\n\n\n    \nconst getType2 = {\n'VARIABLE':true, 'STRING':true,\n'FLOAT':true, 'INTEGER':true,'NOT':true,\n'EQUAL':true, 'SIGN':true, 'SIGN':true, 'MATH_OPERATOR':true, 'MATH_OPERATOR':true, 'MATH_OPERATOR':true, 'POWER':true,\n'DELIMITER':true,\n'LPAREN':true, 'RPAREN':true,\n'OPEN_STATEMENT':true,\n'CLOSE_STATEMENT':true,\n'AS':true, 'IFN':true,\n'LOOP':true, 'ON':true,\n'BY':true, 'SAY':true,'GET':true,'FINALLY':true,\n'UNTIL':true, 'COMP1':true,'COMP2':true,'AND':true,'OR':true,'COMMENT':true};\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}